pipeline {
    agent any // assumes dotnet installed on build agent

    stages {
        stage('Checkout') {
            steps {
                // Checkout code from the GitHub repository
                git url: 'https://github.com/dodyg/practical-aspnetcore.git', branch: 'net6.0'
            }
        }

        stage('Build') {
            steps {
                dir('projects/testing/nunit-1/src') {
                    echo 'Building the .NET project...'

                    // Show .NET version
                    sh 'dotnet --version'

                    // Ensure clean build
                    sh 'dotnet clean'

                    // Restore dependencies
                    sh 'dotnet restore'

                    // Build the project
                    sh 'dotnet build --configuration Release --no-restore'
                }
            }
        }

        stage('Test') {
            steps {
                dir('projects/testing/nunit-1/tests') {
                    echo 'Running unit tests...'

                    // Run Unit tests
                    sh 'dotnet test --configuration Release --no-build --logger "console;verbosity=detailed"'
                }
            }
        }

        stage('Deploy') {
            steps {
                dir('projects/testing/nunit-1/src') {
                    echo 'Deploying the application...'

                    // Create publish directory
                    sh 'mkdir -p publish'

                    // Publish the application
                    sh 'dotnet publish --configuration Release --output publish --no-build'

                    // Archive the artifacts
                    archiveArtifacts artifacts: 'publish/**', fingerprint: true

                    echo 'Deployment completed successfully'
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully'
        }
        failure {
            echo 'Pipeline failed'
        }
        always {
            // Clean up workspace (requires https://plugins.jenkins.io/ws-cleanup/)
            cleanWs(cleanWhenNotBuilt: false,
                deleteDirs: true,
                disableDeferredWipeout: true,
                notFailBuild: true)
        }
    }
}
